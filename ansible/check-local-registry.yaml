---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: Install deps
      include_role: undercloud

    - tmpfile:
        state: directory
      register: tmpdir

    - set_fact:
        update_conf: false
        insecure: "{{registry_server}}:{{registry_port}}"

    - name: Create TripleO image list
      shell: |
        openstack overcloud container image prepare --push-destination {{ registry_server }}:{{ registry_port }} --output-env-file {{ tmpdir.path }}/image-list.yaml

    - name: Load docker config for check
      include_vars:
        file: /etc/docker/daemon.json
        name: docker_conf_json

    - name: Update when inseucre registry not defined
      set_fact:
        docker_conf_json: "{{ docker_conf_json | combine(new_item, recursive=true) }}"
      vars:
        new_item: "{ 'insecure-registries' : ['{{ insecure }}'] }"
      when: 'docker_conf_json["insecure-registries"] is not defined'
      register: ca
      changed_when: ca.skipped is not defined
      become: true

    - name: Update when inseurce registry not in config
      set_fact:
        docker_conf_json: "{{ docker_conf_json | combine(new_item, recursive=true) }}"
      vars:
        new_item: "{ 'insecure-registries' : {{ docker_conf_json['insecure-registries'] + [ insecure ] }} }"
      when:
        - 'insecure not in docker_conf_json["insecure-registries"]'
      register: cb
      changed_when: cb.skipped is not defined
      become: true

    - name: Write docker config
      copy:
        content: "{{docker_conf_json | to_nice_json }}"
        dest: /etc/docker/daemon.json
        backup: true
      when: ca.changed or cb.changed
      become: true

    - name: Restart docker
      systemd:
        name: docker
        state: restarted
      when: ca.changed or cb.changed
      become: true

    - name: Include images list
      include_vars: "{{ tmpfile.path }}/image-list.yaml }}"

    - set_fact:
        images_dicts: "{{ parameter_defaults.values() }}"

    - name: Pull all images from local-registry
      shell: |
        docker pull {{ item }}
      with_items: "{{ images_dicts }}"
      loop_control:
        label: "{{ item }}"
      become: true

    # Cameron.c: Find a good way to print this.
    - debug:
        msg: |
          Pull failed images
          {% for item in r.results %}
            item.item
          {% endfor %}
